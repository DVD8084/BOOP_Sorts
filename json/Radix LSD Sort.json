{
  "name": "Radix LSD Sort",
  "best-case": "n×k",
  "average-case": "n×k",
  "worst-case": "n×k",
  "text": [
    " * Note: here k means the maximum number of digits needed to store any number in the input range.",
    "",
    "{header}",
    "LSD stands for Least Significant Digit.",
    "{/header}",
    "The idea of Radix LSD Sort is to do digit by digit sort starting from least significant digit to most significant digit.",
    "Radix LSD Sort uses counting sort as a subroutine to sort.",
    "",
    "{header}",
    "The Radix LSD Sort Algorithm",
    "{/header}",
    "",
    "1) Do following for each digit i where i varies from least significant digit to the most significant digit.",
    "    a) Sort input array using counting sort (or any stable sort) according to the ith digit.",
    "",
    "{header}",
    "Example in base 10:",
    "{/header}",
    "",
    "Original, unsorted list:",
    "",
    "170, 45, 75, 90, 802, 24, 2, 66",
    "",
    "Sorting by least significant digit (1s place) gives:",
    "[*Notice that we keep 802 before 2, because 802 occurred before 2",
    "in the original list, and similarly for pairs 170 & 90 and 45 & 75.]",
    "",
    "170, 90, 802, 2, 24, 45, 75, 66",
    "",
    "Sorting by next digit (10s place) gives:",
    "[*Notice that 802 again comes before 2 as 802 comes before 2 in the previous list.]",
    "",
    "802, 2, 24, 45, 66, 170, 75, 90",
    "",
    "Sorting by most significant digit (100s place) gives:",
    "",
    "2, 24, 45, 66, 75, 90, 170, 802"
  ]
}